name: "Ccache Setup"
description: "Setup ccache"

inputs:
  PROJECT_PATH:
    description: "Path where the project is checked out"
    required: true
    default: "project"
  CONTROL_COMPONENTS_PATH:
    description: "Path to the control components library"
    required: true
    default: "project"
  CONFIGURATION_PATH_CCACHE:
    description: "ccache configuration path"
    required: true
    default: ".env/ccache"
  LOG_PATH:
    description: "path for various log files"
    required: true
    default: ".log"
  CACHE_PATH:
    description: "path for various caches"
    required: true
    default: ".cache"
  GITHUB_TOKEN:
    description: "GitHub token for authentication"
    required: true
    default: "${{ github.token }}"
  CCACHE_HASH_FILE_KEY:
    description: "Unique cache key for ccache hash file"
    required: true
    default: "ccache-last-hash-${{ runner.os }}-${{ github.repository_owner }}-${{ github.event.repository.name }}"

runs:
  using: "composite"
  steps:
    - name: ccache setup configuration
      shell: bash
      run: |
        ccache_path="${{ inputs.CACHE_PATH }}/ccache"
        ccache_log_file="${{ inputs.LOG_PATH }}/ccache"

        mkdir -p $ccache_path

        echo "export CCACHE_MAXSIZE=512M" >> "${{ inputs.CONFIGURATION_PATH_CCACHE }}"
        echo "export CCACHE_COMPRESS=true" >> "${{ inputs.CONFIGURATION_PATH_CCACHE }}"

        # https://stackoverflow.com/questions/53659419/no-hits-in-gitlab-ci-for-ccache
        echo "export CCACHE_COMPILERCHECK=content" >> "${{ inputs.CONFIGURATION_PATH_CCACHE }}"

        echo "export CCACHE_BASEDIR=$GITHUB_WORKSPACE" >> "${{ inputs.CONFIGURATION_PATH_CCACHE }}"
        echo "export CCACHE_DIR=$GITHUB_WORKSPACE/$ccache_path" >> "${{ inputs.CONFIGURATION_PATH_CCACHE }}"

        echo "export CCACHE_LOGFILE=$GITHUB_WORKSPACE/$ccache_log_file" >> "${{ inputs.CONFIGURATION_PATH_CCACHE }}"

    - name: Restore ccache Hash File
      uses: actions/cache/restore@v4
      with:
        path: ${{ inputs.CACHE_PATH }}/ccache_last_hash
        key: ${{ inputs.CCACHE_HASH_FILE_KEY }}


    - name: ccache update hash file
      env:
          PROJECT_PATH: "${{ inputs.PROJECT_PATH }}"
      shell: bash
      run: |
        # Compute new hash
        new_hash=$("${{ inputs.CONTROL_COMPONENTS_PATH }}/tools/scripts/gen_source_hash.sh")

        # Load previous hash if exists
        hash_file="${{ inputs.CACHE_PATH }}/ccache_last_hash"
        if [[ -f "$hash_file" ]]; then
          prev_hash=$(cat "$hash_file")
        else
          prev_hash=""
        fi

        # If no previous hash or hashes differ, use new hash and update file
        if [[ "$prev_hash" != "$new_hash" ]]; then
          if [[ "${GITHUB_REF}" == "refs/heads/main" || "${GITHUB_REF}" == "refs/heads/master" ]]; then
            echo "Updating cache key: prev_hash=$prev_hash new_hash=$new_hash"
            echo "$new_hash" > "$hash_file"

            echo "ccache_hash_file_changed=true" >> $GITHUB_ENV
          else
            echo "ccache_hash_file_changed=false" >> $GITHUB_ENV
          fi

          if [[ -z "$prev_hash" ]]; then
            prev_hash=$new_hash
          fi
        else
          echo "ccache_hash_file_changed=false" >> $GITHUB_ENV
        fi

        echo "ccache_cache_key=ccache-${{ runner.os }}-$new_hash" >> $GITHUB_ENV
        echo "ccache_cache_restore_key=ccache-${{ runner.os }}-$prev_hash" >> $GITHUB_ENV

    - name: ccache remove hash file
      if: env.ccache_hash_file_changed == 'true'
      uses: open-control-systems/gh-action-cache-clear@v0.0.2
      with:
        PATTERN: "^${{ inputs.CCACHE_HASH_FILE_KEY }}"
        GITHUB_TOKEN: ${{ inputs.GITHUB_TOKEN }}


    - name: ccache save hash file
      if: env.ccache_hash_file_changed == 'true'
      uses: actions/cache/save@v4
      with:
        path: ${{ inputs.CACHE_PATH }}/ccache_last_hash
        key: ${{ inputs.CCACHE_HASH_FILE_KEY }}

    - name: ccache setup cache
      uses: actions/cache@v4
      with:
        path: ${{ inputs.CACHE_PATH }}/ccache
        key: ${{ env.ccache_cache_key }}
        restore-keys: |
          ${{ env.ccache_cache_restore_key }}
