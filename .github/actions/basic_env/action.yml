name: "Platform Independent Environment Setup"
description: "Setup all prerequisites"
inputs:
  PROJECT_PATH:
    description: "Path where the project is checked out"
    required: true
    default: "project"
  OCS_COMPONENTS_PATH:
    description: "Path to the OCS components library"
    required: true
    default: "project"
  CONFIGURATION_PATH_CCACHE:
    description: "ccache configuration path"
    required: true
    default: ".env/ccache"
  CONFIGURATION_PATH:
    description: "path for various build configurations"
    required: true
    default: ".env"
  LOG_PATH:
    description: "path for various log files"
    required: true
    default: ".log"
  CACHE_PATH:
    description: "path for various caches"
    required: true
    default: ".cache"
runs:
  using: "composite"
  steps:
    - name: Setup Configuration Paths
      run: |
        echo "Using Configuration Path: ${{ inputs.CONFIGURATION_PATH }}"
        echo "Using Log Path: ${{ inputs.LOG_PATH }}"
        echo "Using Cache Path: ${{ inputs.CACHE_PATH }}"

        mkdir -p "${{ inputs.CONFIGURATION_PATH }}"
        mkdir -p "${{ inputs.LOG_PATH }}"
        mkdir -p "${{ inputs.CACHE_PATH }}"
      shell: bash

    - name: Install Prerequisites
      run: |
        set -xe
        sudo apt-get update
        sudo apt-get install -y \
            git wget flex bison gperf python3 python3-pip python3-venv \
            cmake ninja-build ccache libffi-dev libssl-dev dfu-util libusb-1.0-0
      shell: bash

    - name: Setup ccache Configuration
      run: |
        ccache_path="${{ inputs.CACHE_PATH }}/ccache"
        ccache_log_file="${{ inputs.LOG_PATH }}/ccache"

        mkdir -p $ccache_path

        echo "export CCACHE_MAXSIZE=512M" >> "${{ inputs.CONFIGURATION_PATH_CCACHE }}"
        echo "export CCACHE_COMPRESS=true" >> "${{ inputs.CONFIGURATION_PATH_CCACHE }}"

        # https://stackoverflow.com/questions/53659419/no-hits-in-gitlab-ci-for-ccache
        echo "export CCACHE_COMPILERCHECK=content" >> "${{ inputs.CONFIGURATION_PATH_CCACHE }}"

        echo "export CCACHE_BASEDIR=$GITHUB_WORKSPACE" >> "${{ inputs.CONFIGURATION_PATH_CCACHE }}"
        echo "export CCACHE_DIR=$GITHUB_WORKSPACE/$ccache_path" >> "${{ inputs.CONFIGURATION_PATH_CCACHE }}"

        echo "export CCACHE_LOGFILE=$GITHUB_WORKSPACE/$ccache_log_file" >> "${{ inputs.CONFIGURATION_PATH_CCACHE }}"
      shell: bash

    - name: Load ccache Cache Key
      run: |
        # Compute new hash
        new_hash=$("${{ inputs.OCS_COMPONENTS_PATH }}/tools/scripts/gen_source_hash.sh")

        # Load previous hash if exists
        hash_file="${{ inputs.CACHE_PATH }}/ccache_last_hash"
        if [[ -f "$hash_file" ]]; then
          prev_hash=$(cat "$hash_file")
        else
          prev_hash=""
        fi

        # If no previous hash or hashes differ, use new hash and update file
        if [[ "$prev_hash" != "$new_hash" ]]; then
          echo "Updating cache key: prev_hash=$prev_hash new_hash=$new_hash"
          echo "$new_hash" > "$hash_file"

          if [[ -z "$prev_hash" ]]; then
            prev_hash=$new_hash
          fi
        fi

        echo "ccache_cache_key=ccache-${{ runner.os }}-$new_hash" >> $GITHUB_ENV
        echo "ccache_cache_restore_key=ccache-${{ runner.os }}-$prev_hash" >> $GITHUB_ENV
      shell: bash
      env:
          PROJECT_PATH: "${{ inputs.PROJECT_PATH }}"

    - name: Setup ccache Cache
      uses: actions/cache@v4
      with:
        path: |
          ${{ inputs.CACHE_PATH }}/ccache
          ${{ inputs.CACHE_PATH }}/ccache_last_hash
        key: ${{ env.ccache_cache_key }}
        restore-keys: |
          ${{ env.ccache_cache_restore_key }}
