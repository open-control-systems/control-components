name: "Project Configuration Reader"
description: "Read project configuration"
inputs:
  PROJECT_NAME:
    description: "Unique project identifier"
    required: true
  BUILD_CONFIG_PATH:
    description: "Path where to store the project configurations"
    required: true
  PROJECT_CONFIG_PATH:
    description: "Path where configurations for all projects is stored"
    required: true
runs:
  using: "composite"
  steps:
    - name: install yq
      shell: bash
      run: |
        VERSION=v4.2.0
        BINARY=yq_linux_amd64
        wget https://github.com/mikefarah/yq/releases/download/${VERSION}/${BINARY}.tar.gz -O - | \
        tar xz && sudo mv ${BINARY} /usr/bin/yq

    - name: prepare configuration
      shell: bash
      run: |
        # Read the project-specific config from YAML and append to the config file.
        if yq eval ".projects[\"${{ inputs.PROJECT_NAME }}\"].config" "${{ inputs.PROJECT_CONFIG_PATH }}" | grep -qv "null"; then
          yq eval ".projects[\"${{ inputs.PROJECT_NAME }}\"].config[]" "${{ inputs.PROJECT_CONFIG_PATH }}" | while read -r line; do
            [ -n "$line" ] && echo "$line" >> "${{ inputs.BUILD_CONFIG_PATH }}"
          done
        fi

        # Read the firmware description from YAML.
        FW_DESCRIPTION=$(yq eval ".projects[\"${{ inputs.PROJECT_NAME }}\"].desc" "${{ inputs.PROJECT_CONFIG_PATH }}")

        # Append general firmware metadata.
        echo "CONFIG_OCS_CORE_FW_VERSION=\"${{ steps.version_formatter.outputs.build_version }}\"" >> "${{ inputs.BUILD_CONFIG_PATH }}"
        echo "CONFIG_OCS_CORE_FW_NAME=\"${{ inputs.PROJECT_NAME }}\"" >> "${{ inputs.BUILD_CONFIG_PATH }}"
        echo "CONFIG_OCS_CORE_FW_DESCRIPTION=\"$FW_DESCRIPTION\"" >> "${{ inputs.BUILD_CONFIG_PATH }}"
